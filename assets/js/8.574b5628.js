(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{213:function(a,t,v){"use strict";v.r(t);var _=v(0),s=Object(_.a)({},(function(){var a=this,t=a.$createElement,v=a._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h1",{attrs:{id:"算法面试系列1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算法面试系列1"}},[a._v("#")]),a._v(" 算法面试系列1")]),a._v(" "),v("h2",{attrs:{id:"求平方根"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#求平方根"}},[a._v("#")]),a._v(" 求平方根")]),a._v(" "),v("h3",{attrs:{id:"二分法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二分法"}},[a._v("#")]),a._v(" 二分法")]),a._v(" "),v("h3",{attrs:{id:"牛顿迭代法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#牛顿迭代法"}},[a._v("#")]),a._v(" 牛顿迭代法")]),a._v(" "),v("p",[a._v("x(n+1) = x(n) - f(x(n)) / f'(x(n))")]),a._v(" "),v("p",[a._v("x(n+1) = x(n) - x(n)^2 / 2x(n)")]),a._v(" "),v("p",[a._v("x(n+1) = (x(n) + y0/x(n)) / 2")]),a._v(" "),v("h2",{attrs:{id:"字典树"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#字典树"}},[a._v("#")]),a._v(" 字典树")]),a._v(" "),v("h3",{attrs:{id:"思想"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#思想"}},[a._v("#")]),a._v(" 思想")]),a._v(" "),v("p",[a._v("空间换时间")]),a._v(" "),v("h3",{attrs:{id:"leetcode"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#leetcode"}},[a._v("#")]),a._v(" leetcode")]),a._v(" "),v("ul",[v("li",[a._v("208 题")])]),a._v(" "),v("h3",{attrs:{id:"二维网格中的搜索问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二维网格中的搜索问题"}},[a._v("#")]),a._v(" 二维网格中的搜索问题")]),a._v(" "),v("h2",{attrs:{id:"dfs-和-bfs"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dfs-和-bfs"}},[a._v("#")]),a._v(" DFS 和 BFS")]),a._v(" "),v("ul",[v("li",[a._v("求数的高度")]),a._v(" "),v("li",[a._v("求数的最大最小子树高度")])]),a._v(" "),v("h2",{attrs:{id:"三数之和"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三数之和"}},[a._v("#")]),a._v(" 三数之和")]),a._v(" "),v("ul",[v("li",[a._v("暴力求解 O(n^3)")]),a._v(" "),v("li",[a._v("c = -(a+b); 利用 set 判断 -(a+b) 是否存在 c")]),a._v(" "),v("li",[a._v("排序 双向指针压缩 a + b > c | a + b < c")])]),a._v(" "),v("h2",{attrs:{id:"hash"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hash"}},[a._v("#")]),a._v(" hash")]),a._v(" "),v("h3",{attrs:{id:"有效的变异位单词"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#有效的变异位单词"}},[a._v("#")]),a._v(" 有效的变异位单词")]),a._v(" "),v("p",[a._v("'rat' === 'art'")]),a._v(" "),v("ul",[v("li",[a._v("单词排序")]),a._v(" "),v("li",[a._v("hash map")])]),a._v(" "),v("h2",{attrs:{id:"最长上升子序列"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#最长上升子序列"}},[a._v("#")]),a._v(" 最长上升子序列")]),a._v(" "),v("ul",[v("li",[a._v("暴力求解 2^n")]),a._v(" "),v("li",[a._v("动态规划 O(n^2)\n"),v("ul",[v("li",[a._v("状态定义")]),a._v(" "),v("li",[a._v("写出方程")])])]),a._v(" "),v("li",[a._v("二分查找 O(nlog2n)")])]),a._v(" "),v("h2",{attrs:{id:"乘积上升最大子序列"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#乘积上升最大子序列"}},[a._v("#")]),a._v(" 乘积上升最大子序列")]),a._v(" "),v("ul",[v("li",[a._v("暴力求解 2^n")]),a._v(" "),v("li",[a._v("动态规划\n"),v("ul",[v("li",[a._v("状态定义")]),a._v(" "),v("li",[a._v("DP 方程")])])])]),a._v(" "),v("h2",{attrs:{id:"动态规划"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#动态规划"}},[a._v("#")]),a._v(" 动态规划")]),a._v(" "),v("p",[a._v("最优子结构（当前结构依赖前一个的最优子结构）")]),a._v(" "),v("h2",{attrs:{id:"零钱兑换"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#零钱兑换"}},[a._v("#")]),a._v(" 零钱兑换")]),a._v(" "),v("p",[a._v("爬楼梯问题")]),a._v(" "),v("p",[a._v("dp[i] = min(dp[i], dp[i] - coins[j]) + 1")]),a._v(" "),v("h2",{attrs:{id:"股票买卖系列"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#股票买卖系列"}},[a._v("#")]),a._v(" 股票买卖系列")]),a._v(" "),v("h3",{attrs:{id:"leetcode-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-2"}},[a._v("#")]),a._v(" leetcode")]),a._v(" "),v("p",[a._v("持有一股")]),a._v(" "),v("ul",[v("li",[a._v("121")]),a._v(" "),v("li",[a._v("122")]),a._v(" "),v("li",[a._v("123")]),a._v(" "),v("li",[a._v("309")])]),a._v(" "),v("p",[a._v("持有多股")]),a._v(" "),v("ul",[v("li",[a._v("188")]),a._v(" "),v("li",[a._v("714")])]),a._v(" "),v("h3",{attrs:{id:"解决思路"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#解决思路"}},[a._v("#")]),a._v(" 解决思路")]),a._v(" "),v("ul",[v("li",[a._v("动态规划\n"),v("ul",[v("li",[a._v("定义状态")]),a._v(" "),v("li",[a._v("写出方程")])])])]),a._v(" "),v("p",[a._v("三维 DP[i][j][k] 第 i 天 j (买或卖)卖持有 k 股的最大利润")]),a._v(" "),v("h2",{attrs:{id:"编辑距离"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#编辑距离"}},[a._v("#")]),a._v(" 编辑距离")]),a._v(" "),v("ul",[v("li",[a._v("动态规划")])]),a._v(" "),v("h2",{attrs:{id:"并查集"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#并查集"}},[a._v("#")]),a._v(" 并查集")]),a._v(" "),v("ul",[v("li",[a._v("元素本身指向自己")])]),a._v(" "),v("h3",{attrs:{id:"例题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#例题"}},[a._v("#")]),a._v(" 例题")]),a._v(" "),v("ul",[v("li",[a._v("岛屿的个数")]),a._v(" "),v("li",[a._v("朋友圈")])])])}),[],!1,null,null,null);t.default=s.exports}}]);