(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{248:function(t,e,v){"use strict";v.r(e);var _=v(0),l=Object(_.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"可替换元素"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#可替换元素"}},[t._v("#")]),t._v(" 可替换元素")]),t._v(" "),v("p",[t._v("replaced element / none-replaced element")]),t._v(" "),v("h2",{attrs:{id:"定义"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),v("ul",[v("li",[t._v("在 CSS 中，替换元素是表示形式超出 CSS 范围的元素，他们是外部对象，独立于 CSS 格式模型")]),t._v(" "),v("li",[t._v("\bCSS 可影响可替换元素的位置，不会影响到可替换元素自身的内容")]),t._v(" "),v("li",[t._v("某些替换元素具有固有尺寸或定义的基线，只有可替换的元素才能具有固有尺寸")])]),t._v(" "),v("h2",{attrs:{id:"替换元素"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#替换元素"}},[t._v("#")]),t._v(" 替换元素")]),t._v(" "),v("ul",[v("li",[t._v("iframe")]),t._v(" "),v("li",[t._v("video")]),t._v(" "),v("li",[t._v("embed")]),t._v(" "),v("li",[t._v("img")])]),t._v(" "),v("p",[t._v("某些特殊情况下，以下元素也可以是替换元素")]),t._v(" "),v("ul",[v("li",[t._v("opiton")]),t._v(" "),v("li",[t._v("audio")]),t._v(" "),v("li",[t._v("canvas")]),t._v(" "),v("li",[t._v("object")]),t._v(" "),v("li",[t._v("applet")]),t._v(" "),v("li",[t._v("input type=image")])]),t._v(" "),v("h2",{attrs:{id:"content-属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#content-属性"}},[t._v("#")]),t._v(" content 属性")]),t._v(" "),v("blockquote",[v("p",[t._v("content 属性应用在元素的 ::before 和 ::after 伪元素中插入内容")])]),t._v(" "),v("h3",{attrs:{id:"取值"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#取值"}},[t._v("#")]),t._v(" 取值")]),t._v(" "),v("ul",[v("li",[t._v("normal 默认值")]),t._v(" "),v("li",[t._v("none 不产生伪类元素")]),t._v(" "),v("li",[t._v("string 文本内容")]),t._v(" "),v("li",[t._v("url")]),t._v(" "),v("li",[t._v("counter/counters 计数/嵌套计数")]),t._v(" "),v("li",[t._v("attr 显示元素属性内容")]),t._v(" "),v("li",[t._v("open-quote close-quote 增加去除引号")]),t._v(" "),v("li",[t._v("no-open-quote no-close-quote 不产生任何内容（会改变引号层级）")])]),t._v(" "),v("h3",{attrs:{id:"counter-counters"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#counter-counters"}},[t._v("#")]),t._v(" counter/counters")]),t._v(" "),v("blockquote",[v("p",[t._v("嵌套计数器，返回表示指定计数器当前值的拼接字符串")])]),t._v(" "),v("ul",[v("li",[t._v("两种形式\n"),v("ul",[v("li",[t._v("counters(name, string)")]),t._v(" "),v("li",[t._v("counters(name, string, style)")])])]),t._v(" "),v("li",[t._v("通常与伪元素搭配使用 content 属性，理论上支持属性值为 string 的任何地方")]),t._v(" "),v("li",[t._v("生成的文本是具有给定名称的所有计数器的值，从最外层到最内层，之间由指定字符串分隔")]),t._v(" "),v("li",[t._v("style 默认为十进制（upper-roman, lower-roman, decimal-leading-zero, lower-alpha)")])]),t._v(" "),v("h2",{attrs:{id:"list-style-属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#list-style-属性"}},[t._v("#")]),t._v(" list-style 属性")]),t._v(" "),v("blockquote",[v("p",[t._v("symbols 函数")])])])}),[],!1,null,null,null);e.default=l.exports}}]);