(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{229:function(t,a,s){"use strict";s.r(a);var n=s(0),o=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"history-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history-api"}},[t._v("#")]),t._v(" History API")]),t._v(" "),s("h2",{attrs:{id:"window-history"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#window-history"}},[t._v("#")]),t._v(" window.history")]),t._v(" "),s("ul",[s("li",[t._v("back Function 后退一页")]),t._v(" "),s("li",[t._v("forward Function 前进一页")]),t._v(" "),s("li",[t._v("go Function(Number) | String)")])]),t._v(" "),s("ol",[s("li",[t._v("负数 history.go(-1) 后退一页")]),t._v(" "),s("li",[t._v("正数 history.go(2) 前进两页")]),t._v(" "),s("li",[t._v("参数为字符串时，跳到最近的页面（可能后退也可能前进）history.go('google.com');")])]),t._v(" "),s("ul",[s("li",[t._v("pushState Function")])]),t._v(" "),s("ol",[s("li",[t._v("接收三个参数：状态对象、新状态的标题（浏览器暂未实现）、相对地址 url")]),t._v(" "),s("li",[t._v("会创建新的历史状态")])]),t._v(" "),s("ul",[s("li",[t._v("replaceState Function")])]),t._v(" "),s("ol",[s("li",[t._v("接收三个参数：状态对象、新状态的标题（浏览器暂未实现）、相对地址 url")]),t._v(" "),s("li",[t._v("更新当前页面的历史状态，不会计入历史状态")])]),t._v(" "),s("blockquote",[s("p",[t._v("手动调用 pushState，window history 对象每切换不同的页面长度(前进后退) length + 1，replaceState 则不会")])]),t._v(" "),s("ul",[s("li",[t._v("state")])]),t._v(" "),s("p",[s("code",[t._v("页面的 history 状态，可以使用 history.state 获取，设置 state 为调用 pushState, replaceState 的第一个参数状态对象")])]),t._v(" "),s("ul",[s("li",[t._v("scrollRestoration")])]),t._v(" "),s("ol",[s("li",[t._v("允许 web 应用在历史记录导航上设置默认滚动行为")]),t._v(" "),s("li",[t._v("取值：auto manual 默认值为 auto")])]),t._v(" "),s("h2",{attrs:{id:"browser-浏览器路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#browser-浏览器路由"}},[t._v("#")]),t._v(" Browser 浏览器路由")]),t._v(" "),s("p",[s("code",[t._v("单页应用，浏览器路由需要配合服务端配置")])]),t._v(" "),s("ul",[s("li",[t._v("nginx")])]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try_files")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$uri")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$uri")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("popstate 事件")])]),t._v(" "),s("p",[t._v("浏览器后退前进按钮会触发 popstate 事件，进行路由的处理")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'popstate'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"hash-哈希路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash-哈希路由"}},[t._v("#")]),t._v(" Hash 哈希路由")]),t._v(" "),s("p",[s("code",[t._v("无需服务端配置，路由url加上 # 标志符")])]),t._v(" "),s("ul",[s("li",[t._v("hashchange 事件")])]),t._v(" "),s("p",[t._v("监听路由 hash 变化触发事件")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hashchange'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"window-location"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#window-location"}},[t._v("#")]),t._v(" window.location")]),t._v(" "),s("ul",[s("li",[t._v("hash 返回 url 的 hash（#后接 0 个或者多个字符），如果不包括散列，则返回空字符串")]),t._v(" "),s("li",[t._v("host 返回服务器域名 + 端口号（if has)")]),t._v(" "),s("li",[t._v("hostname 服务器域名")]),t._v(" "),s("li",[t._v("href 当前页面完整 url，location 对象的 toString()方法也返回完整 url")]),t._v(" "),s("li",[t._v("pathname 返回 url 中的目录和文件名")]),t._v(" "),s("li",[t._v("port 端口号")]),t._v(" "),s("li",[t._v("protocol 协议 http: | https:")]),t._v(" "),s("li",[t._v("search 返回 url 的查询字符串 ?开头")]),t._v(" "),s("li",[t._v("reload Function")])]),t._v(" "),s("p",[s("code",[t._v("location.reload() 重新加载页面")])]),t._v(" "),s("ul",[s("li",[t._v("replace Function")])]),t._v(" "),s("p",[s("code",[t._v("location.replace() 不会在历史记录中生成新的记录，history对象中长度length属性保持不变")])]),t._v(" "),s("ul",[s("li",[t._v("assign Function(String)")])]),t._v(" "),s("p",[t._v("打开新的 url 地址并生成一条新的历史记录，history 对象 length 属性 + 1")]),t._v(" "),s("ol",[s("li",[t._v("location.href = 'google.com'")]),t._v(" "),s("li",[t._v("window.location = 'google.com'")]),t._v(" "),s("li",[t._v("location.assign('google.com')")])]),t._v(" "),s("blockquote",[s("p",[t._v("以上三种方式同样效果")])]),t._v(" "),s("ul",[s("li",[t._v("URL 重新加载方式")])]),t._v(" "),s("ol",[s("li",[t._v("location.search = ''")]),t._v(" "),s("li",[t._v("location.hostname = ''")]),t._v(" "),s("li",[t._v("location.pathname = ''")]),t._v(" "),s("li",[t._v("location.port = ''")])]),t._v(" "),s("blockquote",[s("p",[t._v("以上方式都会生成浏览器新的历史记录")])]),t._v(" "),s("ul",[s("li",[t._v("URL 改变不会重载")])]),t._v(" "),s("p",[s("code",[t._v("location.hash = '' 这种方式不会重新加载，但仍会生成新的历史记录")])]),t._v(" "),s("p",[t._v("END")])])}),[],!1,null,null,null);a.default=o.exports}}]);